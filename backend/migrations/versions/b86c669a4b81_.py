from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlalchemy_utils

# revision identifiers, used by Alembic.
revision: str = 'b86c669a4b81'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Enum('male', 'female', 'other', name='gender'), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('telegram', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('whatsapp', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('linkedin', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('github', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('profile_picture', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=1023), nullable=False),
    sa.Column('registered_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('telegram', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('whatsapp', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('linkedin', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('github', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('profile_picture', sqlalchemy_utils.types.url.URLType(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=True)
    op.create_table('vacancy',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_title', sa.String(length=60), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=False),
    sa.Column('company', sa.String(length=50), nullable=False),
    sa.Column('experience', sa.Enum('no_experience', 'up_to_1_year', 'between_1_and_3', 'between_3_and_6', 'more_than_6', name='experience'), nullable=False),      
    sa.Column('work_format', sa.Enum('office', 'home', 'hybrid', 'discuss', name='workformat'), nullable=False),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('education', sa.Enum('incomplete_secondary', 'secondary', 'secondary_vocational', 'incomplete_higher', 'bachelor', 'master', 'phd', name='education'), nullable=True),
    sa.Column('employment_type', sa.Enum('full_time', 'part_time', 'internship', 'volunteer', name='employmenttype'), nullable=False),
    sa.Column('skills', postgresql.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resume',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('resume_stage', sa.Enum('in_work', 'screening', 'interview', 'rejected', 'offer', name='resumestage'), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('job_title', sa.String(), nullable=False),
    sa.Column('expected_salary', sa.Integer(), nullable=True),
    sa.Column('interest_in_job', sa.Enum('looking_for_job', 'not_looking_for_a_job', 'considers_proposals', 'offered_a_job_decides', name='interestinjob'), nullable=True),
    sa.Column('skills', postgresql.ARRAY(sa.String(length=255)), nullable=True),
    sa.Column('experience', sa.String(), nullable=True),
    sa.Column('education', sa.String(), nullable=True),
    sa.Column('ready_to_relocate', sa.Boolean(), nullable=True),
    sa.Column('ready_for_business_trips', sa.Boolean(), nullable=True),
    sa.Column('vacancy_id', sa.Integer(), nullable=False),
    sa.Column('candidate_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resume')
    op.drop_table('vacancy')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('candidate')
    # ### end Alembic commands ###